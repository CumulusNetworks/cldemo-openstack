
# Install required packages
- name: get the mitaka packages
  apt_repository: repo='deb http://ubuntu-cloud.archive.canonical.com/ubuntu trusty-updates/mitaka main' state=present

- name: get the mitaka key
  apt_key: id=CE84AE6D241309C2DA6D99D9490CA5978C633C43 keyserver=keyserver.ubuntu.com

- name: install packages
  apt: pkg={{item}} state=present update_cache=yes
  with_items:
    - keystone
    - python-openstackclient

# Install and configure Keystone

- name: create a table for keystone
  mysql_db: name=keystone state=present

- name: enable db access 1
  command: mysql -e "GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY '{{ openstack.admin_password }}';"

- name: enable db access 2
  command: mysql -e "GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' IDENTIFIED BY '{{openstack.admin_password}}';"

- name: /etc/keystone/keystone.conf
  template: src=keystone.conf.j2 dest=/etc/keystone/keystone.conf
  notify: restart keystone

- name: keystone dbsync
  shell: su -s /bin/sh -c "keystone-manage db_sync" keystone

- name: configure fernet
  command: keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone

- name: start keystone
  service: name=keystone state=started

- name: flush handlers in case of changed config
  meta: flush_handlers




# Collect keystone data to avoid duplication errors
- name: collect services
  command: openstack {{ openstack.keystone_args }} service list
  register: _services




# Add keystone services and endpoints
- name: add keystone service
  command: openstack {{openstack.args}} --name keystone --description "Openstack Identity" identity
  when: "'keystone' not in _services.stdout"

- name: add keystone endpoints
  command: openstack {{openstack.args}} endpoint create --region RegionOne identity {{item[0]}} http://controller:{{ item[1] }}/v3
  with_items:
      - ("public", 5000)
      - ("internal", 5000)
      - ("admin", 35357)
  when: "'keystone' not in _services.stdout"
