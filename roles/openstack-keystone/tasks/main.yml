
# Install required packages
- name: install packages
  apt: pkg={{item}} state=present
  with_items:
    - keystone
    - python-keystoneclient

# Install and configure Keystone

- name: create a table for keystone
  mysql_db: name=keystone state=present

- name: enable db access 1
  command: mysql -e "GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY '{{ openstack.admin_password }}';"

- name: enable db access 2
  command: mysql -e "GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' IDENTIFIED BY '{{openstack.admin_password}}';"

- name: /etc/keystone/keystone.conf
  template: src=keystone.conf.j2 dest=/etc/keystone/keystone.conf
  notify: restart keystone

- name: keystone dbsync
  shell: su -s /bin/sh -c "keystone-manage db_sync" keystone

- name: start keystone
  service: name=keystone state=started

- name: flush handlers in case of changed config
  meta: flush_handlers


# Collect keystone data to avoid duplication errors
- name: collect tenants
  command: keystone {{ openstack.keystone_args }} tenant-list
  register: _tenants

- name: collect users
  command: keystone {{ openstack.keystone_args }} user-list
  register: _users

- name: collect roles
  command: keystone {{ openstack.keystone_args }} role-list
  register: _roles

- name: collect services
  command: keystone {{ openstack.keystone_args }} service-list
  register: _services

- name: collect endpoints
  command: keystone {{ openstack.keystone_args }} endpoint-list
  register: _endpoints


# Add keystone tenants
- name: create admin tenant in keystone
  command: keystone {{ openstack.keystone_args }} tenant-create --name admin --description "Admin Tenant"
  when: "'admin' not in _tenants"

- name: create admin user
  command: keystone {{ openstack.keystone_args }} user-create --name admin --pass "{{openstack.admin_password}}" --email "admin@example.com"
  when: "'admin' not in _users"

- name: create admin role in keystone
  command: keystone {{ openstack.keystone_args }} role-create --name admin
  when: "'admin' not in _roles"

- name: add admin role to tenant and user
  command: keystone {{ openstack.keystone_args }} user-role-add --user admin --tenant admin --role admin


- name: create demo tenant in keystone
  command: keystone {{ openstack.keystone_args }} tenant-create --name demo --description "Demo Tenant"
  when: "'demo' not in _tenants"


- name: create demo user
  command: keystone {{ openstack.keystone_args }} user-create --name demo --pass "{{openstack.demo_password}}" --email "demo@example.com"
  when: "'demo' not in _users"


- name: create service tenant in keystone
  command: keystone {{ openstack.keystone_args }} tenant-create --name service --description "Service Tenant"
  when: "'service' not in _tenants"


# Add service entity and endpoints
- name: create keystone service in keystone
  command: keystone {{ openstack.keystone_args }} service-create --name keystone --type identity --description "Openstack Identity"
  when: "'keystone' not in _services"


- name: fetch keystone's id
  shell: keystone service-list | awk '/ identity / {print $2}'
  register: _keystone_id

- name: create keystone endpoint in keystone
  command: keystone {{ openstack.keystone_args }} endpoint-create --service-id {{ _keystone_id }} --publicurl http://controller:5000/v2.0 --internalurl http://controller:5000/v2.0 --adminurl http://controller:35357/v2.0 --region regionOne
  when: "'keystone' not in _endpoints"
