---

- name: create config folder locally
  file: path=config/{{ ansible_hostname }} state=directory recurse=yes
  become: no
  delegate_to: localhost
  tags:
    - local
  when: global.save_local

- name: create rendered flat-file of neutron network config locally
  template: src=network_config.j2 dest=config/{{ ansible_hostname }}/network_config.sh
  become: no
  delegate_to: localhost
  tags:
    - local
  when: global.save_local

- name: configure address scopes
  become: yes
  command: >
      bash -c "source /root/admin-openrc;
      openstack address scope create
      {%   for arg,value in openstack.neutron.address_scope[item].items() -%}
      {%       if value == True -%}
         --{{arg}} \
      {%       elif value == False -%}
      {%       elif value == None -%}
      {%       elif value is string or value is number -%}
         --{{arg}} {{value}} \
      {%       elif value is sequence -%}
      {%           for i,v in value.items() -%}
      {%              if loop.first %}  --{{arg}} {{i}}={{v}}{%- else %},{{i}}={{v}}{% endif %}
      {%           endfor %} \
      {%       endif %}
      {%   endfor %}
         {{ item }}"
  with_items: "{{ openstack.neutron.address_scope }}"

- name: configure subnet pools
  become: yes
  command: >
      bash -c "source /root/admin-openrc;
      openstack subnet pool create
      {%   for arg,value in openstack.neutron.subnet_pool[item].items() -%}
      {%       if value == True -%}
         --{{arg}} \
      {%       elif value == False -%}
      {%       elif value == None -%}
      {%       elif value is string or value is number -%}
         --{{arg}} {{value}} \
      {%       elif value is sequence -%}
      {%           for i,v in value.items() -%}
      {%              if loop.first %}  --{{arg}} {{i}}={{v}}{%- else %},{{i}}={{v}}{% endif %}
      {%           endfor %} \
      {%       endif %}
      {%   endfor %}
         {{ item }}"
  with_items: "{{ openstack.neutron.subnet_pool }}"

- name: configure subnet pools
  become: yes
  command: >
      bash -c "source /root/admin-openrc;
      openstack network create
      {%   for arg,value in openstack.neutron.network[item].items() -%}
      {%       if value == True -%}
         --{{arg}} \
      {%       elif value == False -%}
      {%       elif value == None -%}
      {%       elif value is string or value is number -%}
         --{{arg}} {{value}} \
      {%       elif value is sequence -%}
      {%           for i,v in value.items() -%}
      {%              if loop.first %}  --{{arg}} {{i}}={{v}}{%- else %},{{i}}={{v}}{% endif %}
      {%           endfor %} \
      {%       endif %}
      {%   endfor %}
         {{ item }}"
  with_items: "{{ openstack.neutron.network }}"

- name: configure subnet pools
  become: yes
  command: >
      bash -c "source /root/admin-openrc;
      openstack subnet create
      {%   for arg,value in openstack.neutron.subnet[item].items() -%}
      {%       if value == True -%}
         --{{arg}} \
      {%       elif value == False -%}
      {%       elif value == None -%}
      {%       elif value is string or value is number -%}
         --{{arg}} {{value}} \
      {%       elif value is sequence -%}
      {%           for i,v in value.items() -%}
      {%              if loop.first %}  --{{arg}} {{i}}={{v}}{%- else %},{{i}}={{v}}{% endif %}
      {%           endfor %} \
      {%       endif %}
      {%   endfor %}
         {{ item }}"
  with_items: "{{ openstack.neutron.subnet }}"
